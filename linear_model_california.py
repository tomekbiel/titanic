# -*- coding: utf-8 -*-
"""linear_model_california.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10r6647zdBomRHbLLWLmW4mh9-1BKhxAh
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#df=pd.read_csv("housing.csv")
url=('https://raw.githubusercontent.com/tomekbiel/titanic/refs/heads/main/housing.csv')
df = pd.read_csv(url)
df.info()

df['ocean_proximity'].value_counts()

X = df.drop(columns=['median_house_value','ocean_proximity'])
y = df[['median_house_value']]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=66)

#fill na
X_train['total_bedrooms'] = X_train['total_bedrooms'].fillna(X_train['total_bedrooms'].mean())
X_test['total_bedrooms'] = X_test['total_bedrooms'].fillna(X_train['total_bedrooms'].mean())

#standardise data
from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()

X_train_scaled = pd.DataFrame(scaler.fit_transform(X_train),columns=X_train.columns.tolist())
X_test_scaled = pd.DataFrame(scaler.transform(X_test),columns=X_test.columns.tolist())

#Exercise: Look at Outliers

from sklearn.linear_model import LinearRegression

linreg = LinearRegression()

#fit to training data
linreg.fit(X_train, y_train)

#Use to predict
y_pred = linreg.predict(X_test)

l1 = linreg.score(X_train, y_train)

l2 = linreg.score(X_test, y_test)

print("R² of Linear Regression on training set: {:.3f}".format(l1))
print("R² of Linear Regression on test set: {:.3f}".format(l2))

(y_pred - y_test).abs().mean()

np.sqrt(((y_pred - y_test)**2).mean())

from sklearn.metrics import mean_squared_error, mean_absolute_error, mean_absolute_percentage_error

mean_squared_error(y_pred,y_test)**(0.5)

mean_absolute_error(y_pred,y_test)

mean_absolute_percentage_error(y_pred,y_test)

# Print the Intercept:
print('intercept:', linreg.intercept_)

# Print the Slope:
print('slope:', linreg.coef_)

